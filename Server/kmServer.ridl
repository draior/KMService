// ************************************************************************ //
// WARNING
// -------
// This file is generated by the Type Library importer or Type Libary Editor.
// Barring syntax errors, the Editor will parse modifications made to the file.
// However, when applying changes via the Editor this file will be regenerated
// and comments or formatting changes will be lost.
// ************************************************************************ //
// File generated on 02.02.2014 17:25:22 (- $Rev: 12980 $, 33991417).

[
  uuid(B9DDAC28-AC87-4D42-BA75-28D66B4BB451),
  version(1.0)

]
library kmServer
{

  importlib("stdole2.tlb");
  importlib("midas.dll");
  importlib("STDVCL40.DLL");

  interface IkmServer;
  coclass kmServer;


  [
    custom(8B342977-45CB-4A01-A8F2-E47B61F3539E, 0)
  ]
  typedef VARIANT* POleVariant1;

  [
    custom(8B342977-45CB-4A01-A8F2-E47B61F3539E, 0)
  ]
  typedef BSTR* PWideString1;

  [
    uuid(CAAA5579-0DD8-4589-8A29-41CC40B3F5D2),
    helpstring("Dispatch interface for kmServer Object"),
    dual,
    oleautomation
  ]
  interface IkmServer: IAppServer
  {
    [id(0x0000012D)]
    HRESULT _stdcall LoginInterface([in] VARIANT IClient, [out, retval] long* Result);
    [id(0x0000012E)]
    HRESULT _stdcall LogIn([in] BSTR UName, [in] BSTR Pass, [out] VARIANT* Params, [out, retval] long* Result);
    [id(0x0000012F)]
    HRESULT _stdcall BeginTrans(void);
    [id(0x00000130)]
    HRESULT _stdcall CommitTrans(void);
    [id(0x00000131)]
    HRESULT _stdcall RollbackTrans(void);
    [id(0x00000132)]
    HRESULT _stdcall AddToTransLog([in] VARIANT Date, [in] BSTR Operation, [in] BSTR OperationResult, [in] BSTR Description, [out, retval] long* Result);
    [id(0x00000133)]
    HRESULT _stdcall CloseAllQueries([out, retval] long* Result);
    [id(0x00000134)]
    HRESULT _stdcall CanEnterEditMode([in] BSTR TblName, [in] BSTR TblID, [out, retval] long* Result);
    [id(0x00000135)]
    HRESULT _stdcall GetFilter([in] BSTR ProviderName, [out, retval] BSTR* Result);
    [id(0x00000136)]
    HRESULT _stdcall RequestDoc([in] BSTR TblName, [in] BSTR Cond, [in] BSTR Ord, [in, optional, defaultvalue(1)] byte Actv);
    [id(0x00000137)]
    HRESULT _stdcall CloseQuery([in] BSTR TblName);
    [id(0x00000138)]
    HRESULT _stdcall LastGenID([in] BSTR ProvName, [out, retval] BSTR* Result);
    [id(0x00000139)]
    HRESULT _stdcall DeleteRecord([in] BSTR TblName, [in] BSTR ID);
    [id(0x0000013A)]
    HRESULT _stdcall GetValueEx([in] long SqlID, [in] BSTR SearchFields, [in] VARIANT SearchValues, [in] BSTR ReturnFields, [out] VARIANT* ReturnValues, [in] VARIANT_BOOL ExactMatch, [out, retval] long* Result);
    [id(0x0000013B)]
    HRESULT _stdcall GetSQLStatement([in] long SqlID, [out, retval] BSTR* Result);
    [id(0x0000013C)]
    HRESULT _stdcall RequestDocEx([in] BSTR TblName, [in] long SqlID, [in] VARIANT* SqlStr, [in] VARIANT_BOOL Actv, [out, retval] long* Result);
    [id(0x0000013D)]
    HRESULT _stdcall GetNextID([in] BSTR TblName, [out, retval] VARIANT* Result);
    [id(0x0000013E)]
    HRESULT _stdcall MakeOffer([in] long MashSerialID, [in] long OHour, [out] long* ID, [out, retval] long* Result);
    [id(0x0000013F)]
    HRESULT _stdcall FilterDocuments([in] BSTR TblName, [in] long SqlID, [in] VARIANT* SqlStr, [in] BSTR* OutSql, [out, retval] long* Result);
    [id(0x00000140)]
    HRESULT _stdcall GetValue([in] BSTR TblName, [in] BSTR SearchField, [in] BSTR SearchValue, [in] BSTR ResultField, [out, retval] VARIANT* Result);
    [id(0x00000141)]
    HRESULT _stdcall CheckMashineSerial([in] long MashID, [in] BSTR SerNo, [out] BSTR* Range, [out, retval] long* Result);
    [id(0x00000142)]
    HRESULT _stdcall SetFieldValue([in] BSTR TblName, [in] BSTR TblID, [in] BSTR FldName, [in] BSTR FldValue, [in, defaultvalue(0)] long IsQuoted, [out, retval] long* Result);
    [id(0x00000143)]
    HRESULT _stdcall SetNextDocNo([in] long TblID, [in] BSTR TblField, [in] BSTR TblName, [in] long Digits, [out, retval] long* Result);
  };

  [
    uuid(F0BBD428-77AA-4940-9B09-76499C399BD4),
    helpstring("kmServer Object")
  ]
  coclass kmServer
  {
    [default] interface IkmServer;
  };

};
